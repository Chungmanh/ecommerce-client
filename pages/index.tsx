import type { NextPage } from 'next';
import { useEffect, useState } from 'react';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { Box, Text } from '@chakra-ui/react';
import Product from './product';
import { getAllProducts, getProductsByQuery } from '../common/apis/productApi';
import { useRouter } from 'next/router';
import Sidebar from '../components/Home/SidebarHome';
import SortBar from '../components/Home/SortBar';
import Recommend from '../components/SliderRecommend/Recommender';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import { useSelector, useDispatch } from 'react-redux';
import ReactPaginate from 'react-paginate';
import { TfiAngleLeft, TfiAngleRight } from 'react-icons/tfi';
import Link from 'next/link';
import { log } from 'console';

const Home: NextPage = () => {
  const router = useRouter();
  const [data, setData] = useState<any>();
  const query = useSelector((state: any) => state.search.query);

  async function queryProduct(query: {}) {
    const data = await getProductsByQuery(query);
    setData(data[0]);
  }

  const handlePageClick = async (event: any) => {
    console.log('event: ', event);

    const skip = event.selected * query.limit;
    const queryLimit = {
      ...query,
      skip,
    };
    await queryProduct(queryLimit);
  };

  const pageCount = Math.ceil(data?.metadata[0]?.total / query.limit) || 1;
  const forcePage = data?.metadata[0]?.page || 0;

  useEffect(() => {
    queryProduct(query);
  }, [query]);

  const handleClickProduct = async (id: string) => {
    await router.push(`/product/${id}`);
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box sx={{ backgroundColor: '#f5f5fa', paddingBottom: '30px' }}>
        <Box
          sx={{
            display: 'flex',
            width: '96%',
            margin: '0 auto',
            paddingTop: '16px',
          }}
          id={'container'}
        >
          <Sidebar />
          <Box
            sx={{
              width: '100%',
            }}
          >
            <SortBar />

            <Box
              sx={{
                display: 'flex',
                flexWrap: 'wrap',
                width: '100%',
                height: 'max-content',
              }}
            >
              {data && data?.products?.length === 0 ? (
                <Box sx={{ margin: '0 auto' }}>
                  Hiện không có sản phẩm phù hợp
                </Box>
              ) : (
                data?.products?.map((product: any) => (
                  <Box
                    key={product._id}
                    sx={{ height: 'max-content' }}
                    onClick={() => {
                      handleClickProduct(product._id);
                    }}
                  >
                    <Product
                      name={product.name}
                      image={product.avatar}
                      price={product.price}
                    />
                  </Box>
                ))
              )}
            </Box>
            <ReactPaginate
              breakLabel="..."
              // nextLabel=">"
              nextLabel={
                <Box className="num-next">
                  <TfiAngleRight />
                </Box>
              }
              onPageChange={handlePageClick}
              pageRangeDisplayed={1}
              pageCount={pageCount}
              forcePage={forcePage}
              previousLabel={
                <Box className="num-previous">
                  <TfiAngleLeft />
                </Box>
              }
              renderOnZeroPageCount={null}
              containerClassName={'pagination'}
              pageLinkClassName={'page-num'}
              previousLinkClassName={'page-num-previous'}
              nextLinkClassName={'page-num-next'}
              activeLinkClassName={'active'}
            />
          </Box>
        </Box>
        <Recommend />
      </Box>
    </div>
  );
};

export default Home;
