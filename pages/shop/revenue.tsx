import { ReactElement, useEffect, useState } from 'react';
import {
  Box,
  Input,
  FormControl,
  FormLabel,
  Text,
  Button,
} from '@chakra-ui/react';
import Head from 'next/head';
import { useFormik } from 'formik';
import type { NextPageWithLayout } from '../_app';
import LayoutShop from '../../components/LayoutShop';
import { getDataRevenue } from '../../common/apis/revenueApi';
import moment from 'moment';
import BarChart from '../../components/Chart/Bar';
import PieChart from '../../components/Chart/Pie';

import { HiOutlineClipboardDocumentList } from 'react-icons/hi2';
import { RiProductHuntLine } from 'react-icons/ri';
import { BsCurrencyDollar } from 'react-icons/bs';
import RevenueCard from '../../components/Revenue/Card';

const Revenue: NextPageWithLayout = () => {
  const [data, setData] = useState<any>();
  async function getData(from = '', to = '') {
    const data = await getDataRevenue({ from, to });
    setData(data);
  }

  const formik = useFormik({
    initialValues: {
      from: '',
      to: '',
    },
    onSubmit: async (values) => {
      try {
        const { from, to } = values;
        await getData(from, to);
      } catch (error: any) {
        console.log('error: ', error);
      }
    },
  });

  useEffect(() => {
    getData();
  }, []);
  return (
    <div>
      <Head>
        <title>Revenue</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box>
        <Box
          sx={{
            marginTop: '20px',
          }}
        >
          <form onSubmit={formik.handleSubmit}>
            <Box
              sx={{
                display: 'flex',
                alignItems: 'center',
                width: '80%',
                marginBottom: '20px',
                position: 'relative',
              }}
            >
              <FormControl flex={1}>
                <FormLabel>Từ ngày:</FormLabel>
                <Input
                  type={'date'}
                  name={'from'}
                  size={'sm'}
                  onChange={formik.handleChange}
                  value={formik.values.from}
                />
              </FormControl>
              <span style={{ flex: 1 }}></span>
              <FormControl flex={1}>
                <FormLabel>Đến ngày:</FormLabel>
                <Input
                  type={'date'}
                  name={'to'}
                  size={'sm'}
                  onChange={formik.handleChange}
                  value={formik.values.to}
                />
              </FormControl>
              <span style={{ flex: 1 }}></span>
              <Button
                sx={{ position: 'absolute', bottom: 0, right: 0 }}
                colorScheme="twitter"
                type="submit"
                size={'sm'}
              >
                Thống kê
              </Button>
            </Box>
          </form>
          <Box
            sx={{
              display: 'flex',
              justifyContent: 'space-around',
            }}
          >
            <RevenueCard
              icon={
                <HiOutlineClipboardDocumentList
                  style={{
                    display: 'inline-block',
                    fontSize: '50px',
                  }}
                />
              }
              title={'Đơn hàng'}
              value={data && data.totalOrders ? data.totalOrders : 0}
              backgroundColor={'#d1e9fc'}
              color={'#061b64'}
            />
            <RevenueCard
              icon={
                <RiProductHuntLine
                  style={{
                    display: 'inline-block',
                    fontSize: '50px',
                  }}
                />
              }
              title={'Sản phẩm'}
              value={data && data.totalProducts ? data.totalProducts : 0}
              backgroundColor={'#fff7cd'}
              color={'#7a4f01'}
            />
            <RevenueCard
              icon={
                <BsCurrencyDollar
                  style={{
                    display: 'inline-block',
                    fontSize: '50px',
                  }}
                />
              }
              title={'Tổng tiền'}
              value={data && data.totalPrice ? data.totalPrice : 0}
              backgroundColor={'#ffe7d9'}
              color={'#7a0c2e'}
            />
          </Box>
          {/* <Text sx={{ display: 'inline' }}>Tổng doanh thu: </Text>
          <Box as="span">{data && data.totalPrice} ₫</Box> */}
        </Box>
        <Box
          sx={{
            display: 'flex',
            width: '1120px',
            justifyContent: 'space-around',
            marginTop: '30px',
          }}
        >
          <Box sx={{ flex: 2 }}>
            {data && data?.data?.length !== 0 && <BarChart data={data.data} />}
          </Box>
          <Box sx={{ flex: 1 }}>
            {data && data?.data?.length !== 0 && <PieChart data={data.data} />}
          </Box>
        </Box>
      </Box>
    </div>
  );
};

Revenue.getLayout = function getLayout(page: ReactElement) {
  return <LayoutShop>{page}</LayoutShop>;
};

export default Revenue;
