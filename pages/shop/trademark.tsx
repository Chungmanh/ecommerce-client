import { ReactElement, useEffect, useState } from 'react';
import {
  Box,
  Table,
  Thead,
  Tbody,
  Tr,
  Th,
  Td,
  TableCaption,
  TableContainer,
  IconButton,
  useDisclosure,
  Button,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
  FormControl,
  FormLabel,
  Input,
} from '@chakra-ui/react';
import Head from 'next/head';
import { useFormik } from 'formik';
import type { NextPageWithLayout } from '../_app';
import { IoAdd } from 'react-icons/io5';
import { CiEdit } from 'react-icons/ci';
import { BsTrash3 } from 'react-icons/bs';
import LayoutShop from '../../components/LayoutShop';
import {
  addTrademark,
  getAllTrademarksByUser,
} from '../../common/apis/trademarkApi';
import moment from 'moment';
import Swal from 'sweetalert2';

const Trademark: NextPageWithLayout = () => {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const [trademarks, setTrademarks] = useState<any[]>([]);

  const getTrademarks = async () => {
    const trademarks = await getAllTrademarksByUser();
    setTrademarks(trademarks);
  };

  const formik = useFormik({
    initialValues: {
      name: '',
    },
    enableReinitialize: true,
    onSubmit: async (values) => {
      try {
        console.log('values: ', values);
        const created = await addTrademark(values);
        console.log('created: ', created);

        if (
          created &&
          Object.keys(created).length !== 0 &&
          Object.getPrototypeOf(created) === Object.prototype
        ) {
          onClose();
          Swal.fire({
            customClass: {
              container: 'my-swal',
            },
            icon: 'success',
            title: 'Thao tác thành công',
            showConfirmButton: false,
            timer: 1000,
          });
        } else {
          Swal.fire({
            customClass: {
              container: 'my-swal',
            },
            icon: 'error',
            title: 'Yêu cầu nhập đúng dữ liệu',
            showConfirmButton: false,
            timer: 1000,
          });
        }
      } catch (error: any) {
        Swal.fire({
          customClass: {
            container: 'my-swal',
          },
          icon: 'error',
          title: error.message,
          showConfirmButton: false,
          timer: 1000,
        });
      }
    },
  });

  console.log('trademarks: ', trademarks);

  useEffect(() => {
    if (!isOpen) {
      formik.resetForm();
      console.log('reset: ', !isOpen);
    }
    getTrademarks();
  }, [isOpen]);

  return (
    <div>
      <Head>
        <title>Trademark</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box display={'flex'}>
        <TableContainer>
          <Table variant="simple">
            <TableCaption>Thông tin danh sách thương hiệu</TableCaption>
            <Thead>
              <Tr>
                <Th textAlign={'center'}>STT</Th>
                <Th textAlign={'center'}>Tên thương hiệu</Th>
                <Th textAlign={'center'}>Ngày tạo</Th>
                {/* <Th textAlign={'center'}>Trạng thái</Th> */}
                <Th textAlign={'center'}>Thao tác</Th>
              </Tr>
            </Thead>
            <Tbody>
              {trademarks.length > 0 &&
                trademarks.map((trademark, index) => (
                  <Tr key={trademark._id}>
                    <Td isNumeric>{index + 1}</Td>
                    <Td>{trademark?.name || ''}</Td>
                    <Td>
                      {moment(trademark.createdAt).format('DD/MM/YY, h:mm a')}
                    </Td>

                    <Td>
                      <Box
                        sx={{
                          display: 'flex',
                          justifyContent: 'space-between',
                        }}
                      >
                        <CiEdit
                          size={18}
                          style={{
                            cursor: 'pointer',
                          }}
                          // onClick={() => handleEditProduct(product._id)}
                        />
                        <BsTrash3
                          size={16}
                          style={{
                            cursor: 'pointer',
                          }}
                          // onClick={() => handleDeleteProduct(product._id)}
                        />
                      </Box>
                    </Td>
                  </Tr>
                ))}
            </Tbody>
          </Table>
        </TableContainer>
        <Box>
          <IconButton
            variant="outline"
            colorScheme="teal"
            aria-label="Add"
            icon={<IoAdd />}
            onClick={onOpen}
          />
          <Modal isOpen={isOpen} onClose={onClose}>
            <ModalOverlay />
            <ModalContent>
              <ModalHeader>Thêm mới thương hiệu</ModalHeader>
              <ModalCloseButton />
              <ModalBody pb={6}>
                <form onSubmit={formik.handleSubmit}>
                  <FormControl>
                    <FormLabel>Tên thương hiệu</FormLabel>
                    <Input
                      placeholder="Tên thương hiệu"
                      type={'text'}
                      name={'name'}
                      onChange={formik.handleChange}
                      // value={formik.values.name}
                    />
                  </FormControl>
                </form>
              </ModalBody>

              <ModalFooter>
                <Button colorScheme="blue" mr={3} onClick={formik.submitForm}>
                  Lưu
                </Button>
                <Button onClick={onClose}>Hủy</Button>
              </ModalFooter>
            </ModalContent>
          </Modal>
        </Box>
      </Box>
    </div>
  );
};

// const Shop = () => {
Trademark.getLayout = function getLayout(page: ReactElement) {
  return <LayoutShop>{page}</LayoutShop>;
};

export default Trademark;
