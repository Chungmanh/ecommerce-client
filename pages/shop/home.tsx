import type { ReactElement } from 'react';
import {
  Button,
  Input,
  Box,
  FormControl,
  FormLabel,
  WrapItem,
  Avatar,
  useToast,
  Text,
} from '@chakra-ui/react';
import Head from 'next/head';
import type { NextPageWithLayout } from '../_app';
import LayoutShop from '../../components/LayoutShop';
import { FiEdit } from 'react-icons/fi';
import { BiEdit } from 'react-icons/bi';
import {
  getShopByUser,
  updatedShopByUser,
  changeAvatarShop,
  IShop,
} from '../../common/apis/shopApi';
import { useFormik } from 'formik';
import { useEffect, useState, useRef } from 'react';
import Swal from 'sweetalert2';

const Shop: NextPageWithLayout = () => {
  const [shop, setShop] = useState<IShop>();

  const inputFile = useRef<HTMLInputElement | null>(null);

  const onButtonClick = () => {
    inputFile && inputFile.current && inputFile.current.click();
  };

  const handlePreviewAvatar = async (e: any) => {
    const file = e.target.files[0];
    const updated = await changeAvatarShop(file);
    if (updated) {
      console.log('updated: ', updated);
      getShop();
    }
  };

  const formik = useFormik({
    initialValues: {
      name: `${shop?.name || ''}`,
      address: `${shop?.address || ''}`,
      telephone: `${shop?.telephone || ''}`,
    },
    enableReinitialize: true,
    onSubmit: async (values) => {
      const upated = await updatedShopByUser(values);
      if (
        upated &&
        Object.keys(upated).length !== 0 &&
        Object.getPrototypeOf(upated) === Object.prototype
      ) {
        Swal.fire({
          customClass: {
            container: 'my-swal',
          },
          icon: 'success',
          title: 'Cập nhật thành công',
          showConfirmButton: false,
          timer: 1000,
        });
        // setShop(upated);
      }
      try {
      } catch (error: any) {
        Swal.fire({
          customClass: {
            container: 'my-swal',
          },
          icon: 'error',
          title: error.message,
          showConfirmButton: false,
          timer: 1000,
        });
      }
    },
  });

  const getShop = async () => {
    const shop = await getShopByUser();
    if (
      shop &&
      Object.keys(shop).length !== 0 &&
      Object.getPrototypeOf(shop) === Object.prototype
    ) {
      setShop(shop);
    }
  };
  console.log('render');

  useEffect(() => {
    getShop();
  }, []);

  return (
    <div>
      <Head>
        <title>Shop</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box>
        <Box sx={{ display: 'flex', padding: '20px' }}>
          <Box sx={{ width: '400px' }}>
            <WrapItem
              sx={{
                width: 'fit-content',
                paddingTop: '20px',
                margin: '10px',
                position: 'relative',
              }}
            >
              <Avatar
                size="2xl"
                name={shop?.name || ''}
                src={`${shop?.avatar || ''}`}
              />
              <BiEdit
                style={{
                  position: 'absolute',
                  bottom: 0,
                  right: 0,
                  cursor: 'pointer',
                }}
                onClick={onButtonClick}
              />
            </WrapItem>
            <input
              type="file"
              id="file"
              ref={inputFile}
              style={{ display: 'none' }}
              onChange={handlePreviewAvatar}
            />
            <form onSubmit={formik.handleSubmit}>
              {/* <FormControl>
                <label htmlFor="file">File upload</label>
                <input
                  id="file"
                  name="file"
                  type="file"
                  // onChange={handlePreviewAvatar}
                  className="form-control"
                />
              </FormControl> */}
              <FormControl marginTop={'15px'}>
                <FormLabel htmlFor={'name'}>Tên cửa hàng</FormLabel>
                <Input
                  id={'name'}
                  name={'name'}
                  defaultValue={shop?.name || ''}
                  onChange={formik.handleChange}
                />
              </FormControl>
              <FormControl marginTop={'15px'}>
                <FormLabel htmlFor={'address'}>Địa chỉ</FormLabel>
                <Input
                  id={'address'}
                  name={'address'}
                  // defaultValue={shop?.address || ''}
                  value={formik.values.address}
                  onChange={formik.handleChange}
                />
              </FormControl>
              <FormControl marginTop={'15px'}>
                <FormLabel htmlFor={'telephone'}>Số điện thoại</FormLabel>
                <Input
                  id={'telephone'}
                  name={'telephone'}
                  // defaultValue={shop?.telephone || ''}
                  value={formik.values.telephone}
                  onChange={formik.handleChange}
                />
              </FormControl>
              <FormControl marginTop={'15px'}>
                <Button colorScheme="twitter" type="submit">
                  Lưu
                </Button>
              </FormControl>
            </form>
          </Box>
        </Box>
      </Box>
    </div>
  );
};

// const Shop = () => {
Shop.getLayout = function getLayout(page: ReactElement) {
  return <LayoutShop>{page}</LayoutShop>;
};

export default Shop;
