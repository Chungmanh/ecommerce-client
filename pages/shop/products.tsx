import { ReactElement, useEffect, useState } from 'react';
import {
  Box,
  Table,
  Thead,
  Tbody,
  Tfoot,
  Tr,
  Th,
  Td,
  TableCaption,
  TableContainer,
  IconButton,
  useDisclosure,
} from '@chakra-ui/react';
import Head from 'next/head';
import type { NextPageWithLayout } from '../_app';
import { IoAdd } from 'react-icons/io5';
import { BsTrash3 } from 'react-icons/bs';
import { CiEdit } from 'react-icons/ci';
import LayoutShop from '../../components/LayoutShop';
import ProductFormDrawer from '../../components/ProductFormDrawer';
import {
  getProductsByShop,
  deleteProduct,
  IProduct,
} from '../../common/apis/productApi';
import Swal from 'sweetalert2';

const Shop: NextPageWithLayout = () => {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const [products, setProducts] = useState<any[]>([]);
  const [productId, setProductId] = useState('');

  const handleEditProduct = async (id: string) => {
    setProductId(id);
    onOpen();
  };

  const handleDeleteProduct = async (id: string) => {
    Swal.fire({
      title: 'Bạn có chắc chắn?',
      text: 'Xác nhận xóa sản phẩm này!',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Xác nhận',
    }).then(async (result) => {
      if (result.isConfirmed) {
        const deleted = await deleteProduct(id);
        if (deleted && Object.keys(deleted).length !== 0) {
          const new_products = products.filter((product) => product._id !== id);
          Swal.fire('Deleted!', 'Xóa thành công', 'success');
          setProducts(new_products);
        } else {
          Swal.fire('Error!', 'ko xoa dc.', 'error');
        }
      }
    });
  };

  useEffect(() => {
    async function getProducts() {
      const listProduct = await getProductsByShop();
      setProducts(listProduct);
    }
    console.log('run useEffect');
    if (!isOpen) {
      console.log('setProductId');
      setProductId('');
    }
    getProducts();
  }, [isOpen]);
  return (
    <div>
      <Head>
        <title>Product</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box display={'flex'}>
        {/* <Box display={'flex'}>
          <Box>Quản lý sản phẩm</Box>
        </Box> */}
        <TableContainer>
          <Table variant="simple">
            <TableCaption>Thông tin sản phẩm</TableCaption>
            <Thead>
              <Tr>
                <Th>Tên sản phẩm</Th>
                <Th textAlign={'center'}>Ảnh</Th>
                <Th textAlign={'center'}>Giá</Th>
                <Th textAlign={'center'}>Số lượng</Th>
                <Th textAlign={'center'}>Mô tả</Th>
                <Th textAlign={'center'}>Trạng thái</Th>
                <Th textAlign={'center'}>Thao tác</Th>
              </Tr>
            </Thead>
            <Tbody>
              {products.length > 0 &&
                products.map((product) => (
                  <Tr key={product._id}>
                    <Td>
                      <Box
                        sx={{
                          width: '210px',
                          fontSize: '12px',
                          overflow: 'hidden',
                          whiteSpace: 'pre-wrap',
                          display: '-webkit-box',
                          WebkitBoxOrient: 'vertical',
                          WebkitLineClamp: 2,
                        }}
                      >
                        {product.name}
                      </Box>
                    </Td>
                    <Td>
                      <img
                        src={product.avatar}
                        style={{
                          width: '50px',
                          height: '50px',
                          objectFit: 'cover',
                        }}
                      />
                    </Td>
                    <Td isNumeric>{product.price}</Td>
                    <Td>{product.quantity} (cái)</Td>
                    <Td>
                      <Box
                        sx={{
                          width: '300px',
                          fontSize: '12px',
                          overflow: 'hidden',
                          whiteSpace: 'pre-wrap',
                          display: '-webkit-box',
                          WebkitBoxOrient: 'vertical',
                          WebkitLineClamp: 2,
                        }}
                      >
                        {product.description}
                      </Box>
                    </Td>
                    <Td>{product.status ? 'đang bán' : ''}</Td>
                    <Td>
                      <Box
                        sx={{
                          display: 'flex',
                          justifyContent: 'space-between',
                        }}
                      >
                        <CiEdit
                          size={18}
                          style={{
                            cursor: 'pointer',
                          }}
                          onClick={() => handleEditProduct(product._id)}
                        />
                        <BsTrash3
                          size={16}
                          style={{
                            cursor: 'pointer',
                          }}
                          onClick={() => handleDeleteProduct(product._id)}
                        />
                      </Box>
                    </Td>
                  </Tr>
                ))}
            </Tbody>
            {/* <Tfoot>
              <Tr>
                <Th>To convert</Th>
                <Th>into</Th>
                <Th isNumeric>multiply by</Th>
              </Tr>
            </Tfoot> */}
          </Table>
        </TableContainer>
        <Box>
          <IconButton
            variant="outline"
            colorScheme="teal"
            aria-label="Add"
            icon={<IoAdd />}
            onClick={onOpen}
          />
          <ProductFormDrawer
            isOpen={isOpen}
            onClose={onClose}
            productId={productId}
          />
        </Box>
      </Box>
    </div>
  );
};

Shop.getLayout = function getLayout(page: ReactElement) {
  return <LayoutShop>{page}</LayoutShop>;
};

export default Shop;
