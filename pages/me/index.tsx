// import type { ReactElement } from 'react';
import {
  Box,
  FormControl,
  FormLabel,
  Input,
  Button,
  Text,
  WrapItem,
  Avatar,
  Image,
} from '@chakra-ui/react';
import Head from 'next/head';
import TableOrder from '../../components/TableOrder';
import { BiEdit } from 'react-icons/bi';
import {
  getProductsByOrderId,
  getAllProductsOrderOfUser,
} from '../../common/apis/productApi';
import {
  getInfoUser,
  changeInfoUser,
  changeAvatarUser,
} from '../../common/apis/userApi';
import { useFormik } from 'formik';
import { useState, useEffect, useRef } from 'react';

const Me = () => {
  const [info, setInfo] = useState<any>({
    avatar: '',
    username: '',
    address: '',
    telephone: '',
  });

  const inputFile = useRef<HTMLInputElement | null>(null);

  const onButtonClick = () => {
    inputFile && inputFile.current && inputFile.current.click();
  };

  const handlePreviewAvatar = async (e: any) => {
    const file = e.target.files[0];
    const updated = await changeAvatarUser(file);
    if (updated) {
      getUserDetail();
    }
  };

  const formik = useFormik({
    initialValues: {
      username: `${info.username}`,
      address: `${info.address}`,
      telephone: `${info.telephone}`,
    },
    enableReinitialize: true,
    onSubmit: async (values) => {
      try {
        const { username, address, telephone } = values;
        console.log('values: ', values);
        const updated = await changeInfoUser(username, address, telephone);
        if (updated) {
          console.log('updated: ', updated);
          getUserDetail();
          // formik.resetForm();
        }
      } catch (error: any) {
        console.log('error: ', error);
      }
    },
  });

  async function getUserDetail() {
    const user = await getInfoUser();
    const { avatar, username, address, telephone } = user;
    setInfo({ avatar, username, address, telephone });
  }
  console.log('render');
  useEffect(() => {
    console.log('run useEffect');
    getUserDetail();
  }, []);

  return (
    <div>
      <Head>
        <title>Me</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        sx={{
          margin: '20px auto',
          width: '70%',
          minHeight: '500px',
          overflow: 'hidden',
          boxShadow:
            'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px',
          borderRadius: '12px',
          backgroundColor: '#fff',
        }}
      >
        <Box
          sx={{
            padding: '10px',
            display: 'flex',
          }}
        >
          <Box
            sx={{
              flex: 1,
              borderRight: '1px solid rgba(145, 158, 171, 0.24)',
            }}
          >
            <WrapItem
              sx={{
                width: 'fit-content',
                paddingTop: '20px',
                margin: '10px auto',
                position: 'relative',
              }}
            >
              <Avatar
                size="2xl"
                name={info.username || ''}
                src={`${info.avatar || ''}`}
              />
              <BiEdit
                style={{
                  position: 'absolute',
                  bottom: 0,
                  right: 0,
                  cursor: 'pointer',
                }}
                onClick={onButtonClick}
              />
            </WrapItem>
            <input
              type="file"
              id="file"
              ref={inputFile}
              style={{ display: 'none' }}
              onChange={handlePreviewAvatar}
            />
            <Box
              sx={{
                color: '#212b36',
                fontWeight: 600,
                textAlign: 'center',
              }}
            >
              {info.username}
            </Box>
          </Box>
          <Box
            sx={{
              flex: 3,
              margin: '0px 20px',
            }}
          >
            <Text
              sx={{
                fontWeight: 600,
                fontSize: '22px',
                boxShadow: '0px 11px 10px -12px #b4b4ba',
                padding: '10px 0px',
                marginBottom: '20px',
              }}
            >
              Thông tin tài khoản
            </Text>
            <form onSubmit={formik.handleSubmit}>
              <FormControl mt={4}>
                <FormLabel>Tên người dùng</FormLabel>
                <Input
                  placeholder="username"
                  type={'text'}
                  name={'username'}
                  onChange={formik.handleChange}
                  value={formik.values.username}
                />
              </FormControl>
              <FormControl mt={4}>
                <FormLabel>Địa chỉ</FormLabel>
                <Input
                  placeholder="address"
                  type={'text'}
                  name={'address'}
                  onChange={formik.handleChange}
                  value={formik.values.address}
                />
              </FormControl>
              <FormControl mt={4}>
                <FormLabel>Số điện thoại</FormLabel>
                <Input
                  placeholder="Số điện thoại"
                  type={'text'}
                  name={'telephone'}
                  onChange={formik.handleChange}
                  value={formik.values.telephone}
                />
              </FormControl>
              <Button
                colorScheme="blue"
                mt={4}
                size={'sm'}
                type={'submit'}
                // onClick={formik.submitForm}
              >
                Lưu
              </Button>
            </form>
          </Box>
        </Box>
      </Box>
    </div>
  );
};

export default Me;
